name: Plan

on:
  pull_request:
    branches: [main]

# limit to running one workflow job at at time for this repository
# ensures consistency of the terraform state file
concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: false

# environment variables set from repository secrets
env:
  TF_VAR_STATE_ENCRYPTION_PASSPHRASE: ${{ secrets.TF_VAR_STATE_ENCRYPTION_PASSPHRASE }}

jobs:
  plan:
    name: Plan
    permissions:
      contents: read # allow git checkouts
      pull-requests: write # allow pull request comments
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: copy .env
        run: cp .env.example .env

      - name: tofu init
        run: make tofu_init

      - name: tofu plan
        id: plan
        run: |
          make tofu_plan # uses ansi escape codes, which are handled by github actions
          # save plan output to an output variable (using HEREDOC to handle multiline output)
          echo 'PLAN<<EOF' >> $GITHUB_OUTPUT
          make tofu_show_plan >> $GITHUB_OUTPUT # does not use ansi escape codes, as they are not handled by github comments
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: create plan tarball containing `tfplan` file and `.terraform` directory (preserving execute permissions)
        run: tar zcvf plan.tgz ./src/.terraform/ ./src/tfplan

      - name: save plan tarball as artifact (used by apply workflow)
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          # include pull request number in the name of the artifact
          name: plan-${{ github.event.number }}
          overwrite: true
          path: plan.tgz

      - name: post pull request comment containing tofu plan output
        uses: actions/github-script@v7
        with:
          script: |
            const output = `
              #### OpenTofu Plan ðŸ“–\`${{ steps.plan.outcome }}\`
              \`\`\`
              ${{ steps.plan.outputs.PLAN }}
              \`\`\`
              If you are happy with the plan and want to kick off the apply workflow, approve this pull request or add a comment with the string \`approved\`.
            `
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
